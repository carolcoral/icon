# 图标管理系统 Docker 配置 - 开发环境
FROM node:18-alpine

# 设置工作目录
WORKDIR /app

# 复制根目录 package.json
COPY package*.json ./

# 安装所有依赖（包括开发依赖）
RUN npm install --no-audit --no-fund && npm cache clean --force

# 兜底：全局安装开发期所需工具，防止脚本找不到
RUN npm install -g concurrently@^8 nodemon@^3 --no-audit --no-fund && npm cache clean --force

# 复制客户端 package.json
COPY client/package*.json ./client/

# 安装客户端依赖
WORKDIR /app/client
RUN npm install --no-audit --no-fund && npm cache clean --force

# 回到根目录
WORKDIR /app

# 复制所有源代码
COPY . .

# 创建图片目录
RUN mkdir -p public/assets/images

# 设置权限
RUN chmod -R 755 public/assets/images

# 创建非root用户
RUN addgroup -g 1001 -S nodejs && \
    adduser -S appuser -u 1001

# 更改文件所有权
RUN chown -R appuser:nodejs /app
USER appuser

# 暴露端口
EXPOSE 3000 5173

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD node -e "require('http').get('http://localhost:3000/api/categories', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })" || exit 1

# 启动开发服务器
CMD ["npm", "run", "dev"]
